// <auto-generated />
using System;
using LAB3Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB3Test.Migrations
{
    [DbContext(typeof(SenHSContext))]
    [Migration("20221222084017_AddedSalaryAndHiredate")]
    partial class AddedSalaryAndHiredate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LAB3Test.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("ClassId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.ClassProgram", b =>
                {
                    b.Property<int>("ClassProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassProgramId"), 1L, 1);

                    b.Property<int>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<int>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("FK_CourseId");

                    b.HasKey("ClassProgramId");

                    b.HasIndex("FkClassId");

                    b.HasIndex("FkCourseId");

                    b.ToTable("ClassProgram", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FkEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FK_EmployeeId");

                    b.HasKey("CourseId");

                    b.HasIndex("FkEmployeeId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.CourseGrade", b =>
                {
                    b.Property<int>("CourseGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseGradeId"), 1L, 1);

                    b.Property<int>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("FK_CourseId");

                    b.Property<int>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("FK_StudentId");

                    b.Property<DateTime>("GradeDate")
                        .HasColumnType("date");

                    b.Property<int>("GradeValue")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("CourseGradeId");

                    b.HasIndex("FkCourseId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("CourseGrade", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<int>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("FK_StudentId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("FkClassId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("Enrollment", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PersonNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("StudentId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("LAB3Test.Models.ClassProgram", b =>
                {
                    b.HasOne("LAB3Test.Models.Class", "FkClass")
                        .WithMany("ClassPrograms")
                        .HasForeignKey("FkClassId")
                        .IsRequired()
                        .HasConstraintName("FK_ClassProgram_Class");

                    b.HasOne("LAB3Test.Models.Course", "FkCourse")
                        .WithMany("ClassPrograms")
                        .HasForeignKey("FkCourseId")
                        .IsRequired()
                        .HasConstraintName("FK_ClassProgram_Course");

                    b.Navigation("FkClass");

                    b.Navigation("FkCourse");
                });

            modelBuilder.Entity("LAB3Test.Models.Course", b =>
                {
                    b.HasOne("LAB3Test.Models.Employee", "FkEmployee")
                        .WithMany("Courses")
                        .HasForeignKey("FkEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Course_Employee");

                    b.Navigation("FkEmployee");
                });

            modelBuilder.Entity("LAB3Test.Models.CourseGrade", b =>
                {
                    b.HasOne("LAB3Test.Models.Course", "FkCourse")
                        .WithMany("CourseGrades")
                        .HasForeignKey("FkCourseId")
                        .IsRequired()
                        .HasConstraintName("FK_CourseGrade_Course");

                    b.HasOne("LAB3Test.Models.Student", "FkStudent")
                        .WithMany("CourseGrades")
                        .HasForeignKey("FkStudentId")
                        .IsRequired()
                        .HasConstraintName("FK_CourseGrade_Student");

                    b.Navigation("FkCourse");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("LAB3Test.Models.Enrollment", b =>
                {
                    b.HasOne("LAB3Test.Models.Class", "FkClass")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkClassId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollment_Class");

                    b.HasOne("LAB3Test.Models.Student", "FkStudent")
                        .WithMany("Enrollments")
                        .HasForeignKey("FkStudentId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollment_Student");

                    b.Navigation("FkClass");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("LAB3Test.Models.Class", b =>
                {
                    b.Navigation("ClassPrograms");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("LAB3Test.Models.Course", b =>
                {
                    b.Navigation("ClassPrograms");

                    b.Navigation("CourseGrades");
                });

            modelBuilder.Entity("LAB3Test.Models.Employee", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LAB3Test.Models.Student", b =>
                {
                    b.Navigation("CourseGrades");

                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
